% MAX CUT using simulated annealing
%%
clear all;
clc;

%% Creating a graph
max_edge_value = 10;
num_of_nodes = 20;
[graph,group_size] = SimulateGraph(num_of_nodes,max_edge_value);

%% initial parameters
params = InitParametersSA(graph);

%% 
% intialing first random solution
p = 0.5*ones(1,params.num_of_nodes);
generated = rand(1,params.num_of_nodes);
current = p > generated;

price_current = calc_price(current,graph);
best_price = price_current;
best_cut = current;

saved_solutions = [];
temprature = params.initial_temprature;

while temprature > params.final_temprature

    rand_node_to_change = randi(params.num_of_nodes);
    next_gueesed_solutui = current;
    next(rand_node_to_change) = not(next(rand_node_to_change)); 
    
    saved_solutions = [saved_solutions ; next];

    price_next = calc_price(next,graph);
    delta = (price_next - price_current)*params.norm;
   
    if delta > 0 || rand() < exp(-delta/temprature)
       current = next; 
       price_current = price_next;
    end
       
    if price_current > best_price
        best_price = price_current;
        best_cut = current;
    end 

    temprature = temprature*params.pace; 
end

Displaying(params,saved_solutions,best_cut);



